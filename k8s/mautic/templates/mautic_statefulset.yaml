apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.project.name }}  
  labels:
{{- toYaml .Values.project.labels | nindent 4 }}
spec:
  serviceName: {{ .Values.project.name }}
  replicas: {{ .Values.project.replicas }}
  selector:
    matchLabels:
{{- toYaml .Values.project.labels | nindent 6 }}
  template:
    metadata:
      name: {{ .Values.project.name }}
      labels:
{{- toYaml .Values.project.labels | nindent 8 }}
    spec:
      securityContext:
{{- toYaml .Values.project.securityContext | nindent 8 }}
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: {{ .Values.project.persistence.cache.name }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ .Values.project.persistence.logs.name }}
      containers:
        - image: "{{ .Values.project.nginxImage.repository }}:{{ .Values.project.nginxImage.tag }}"
          name: {{ .Values.project.name }}-nginx
          ports:
            - containerPort: {{ .Values.project.service.targetPort }}
              name: {{ .Values.project.name }}-nginxport
        - image: "{{ .Values.project.mauticImage.repository }}:{{ .Values.project.mauticImage.tag }}"
          name: {{ .Values.project.name }}-mautic
          env:
          - name: MYSQL_DB_HOST
            {{- if .Values.project.IsExternalDB }}
            value: {{ .Values.project.ExternalDbHost }}
            {{- else }}
            value: {{ .Values.project.localDbHost }}
            {{- end }}
          - name: MYSQL_DATABASE
            value: {{ .Values.db.database }}
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: database-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: database-password
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: app-secret
                key: secret-key
          {{- if .Values.project.s3Bucket }}
          - name: S3_BUCKET
            value: {{ .Values.project.s3Bucket }}
          {{- end  }}
          - name: SITE_URL
            value: https://{{ .Values.ingress.domain }}
          - name: MAILER_HOST
            value: {{ .Values.project.mailerHost}}
          - name: MAILER_USER
            value: {{ .Values.project.mailerUser}}
          - name: MAILER_PASSWORD            
            valueFrom:
              secretKeyRef:
                name: app-secret
                key: mailer-password
          - name: RABBITMQ_HOST
            value: {{ .Release.Name }}-rabbitmq-headless
          - name: RABBITMQ_USER
            value: user
          - name: RABBITMQ_PASSWORD
            secretKeyRef:
                name: {{ .Release.Name }}-rabbitmq
                key: rabbitmq-password
          volumeMounts:
            - name: {{ .Values.project.persistence.cache.name }}
              mountPath: /cache
            - name: {{ .Values.project.persistence.logs.name }}
              mountPath: /logs
      imagePullSecrets:
{{- toYaml .Values.project.imagePullSecrets | nindent 6 }}
