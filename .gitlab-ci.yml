  # Please make sure that your branch doesn't have '_' in the name.
  # This pipeline is tightly coupled with kubernetes namespace and Kubernetes dns, 
  # and a DNS-1123 label must consist of lower case alphanumeric characters or '-', 
  # and must start and end with an alphanumeric character.
  stages:
    - dev-build
    - prod-build
    - dev-deploy
    - prod-deploy

  variables:
    # K8s Namespaces Naming. 
    NAMESPACE: $CI_COMMIT_BRANCH
    RELEASE_NAME: mautic-$CI_COMMIT_BRANCH
    RDS_HOST: mauticdb.ckipc1y0vkgw.us-east-1.rds.amazonaws.com
    MAUTIC_REPOSITORY_URL: 993385208142.dkr.ecr.us-west-1.amazonaws.com/facet-mautic
    NGINX_REPOSITORY_URL: 993385208142.dkr.ecr.us-west-1.amazonaws.com/facet-mautic-nginx
    
    # various stages, currently disabled, remove the variable to enable those steps
    DEV_BUILD_DISABLED: "true"
    # PROD_BUILD_DISABLED: "true"
    DEV_RELEASE_DISABLED: "true"
    # PROD_RELEASE_DISABLED: "true"


  # Dev Build stage:  Builds mautic and nginx images with the tag $CI_COMMIT_SHORT_SHA
  # This stage is triggered when code is commited from any branch other than master and the Vairable DEV_BUILD_DISABLED is commented out.   
    
  dev-build:
    image: kbaddi/awscli
    stage: dev-build        
    services:
    - docker:dind

    script:
      - docker build -t $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA .
      - $(aws ecr get-login --no-include-email --region us-west-1)
      - docker push $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
      - docker build -f Dockerfile-nginx -t $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA  .
      - docker push $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA

    only:
      refs:
        - branches
    except:
      refs:
        - master
      variables:
        - $DEV_BUILD_DISABLED    

  # Production Build stage: Builds mautic and nginx images with the tag "latest". 
  # Runs only when code is commited from master and the Vairable PROD_BUILD_DISABLED is commented out.          
  prod-build:
    image: kbaddi/awscli
    stage: prod-build
    variables:
      MAUTIC_REPOSITORY_URL: 993385208142.dkr.ecr.us-west-1.amazonaws.com/facet-mautic
      NGINX_REPOSITORY_URL: 993385208142.dkr.ecr.us-west-1.amazonaws.com/facet-mautic-nginx

    services:
    - docker:dind
    script:
      - docker build -t $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA .
      - docker tag $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA $MAUTIC_REPOSITORY_URL:latest
      - $(aws ecr get-login --no-include-email --region us-west-1)
      - docker push $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
      - docker push $MAUTIC_REPOSITORY_URL:latest
      - docker build -f Dockerfile-nginx -t $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA  .
      - docker tag $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA $NGINX_REPOSITORY_URL:latest
      - docker push $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
      - docker push $NGINX_REPOSITORY_URL:latest
    
    only:
      - master
    except:
      variables:
        - $PROD_BUILD_DISABLED

  
  # Dev Release stage. Deploys application in a namespace named after the branch from which the code is commited. 
  # This stage is triggered when code is commited from any branch other than master and the Vairable DEV_RELEASE_DISABLED is commented out.   
  dev-deploy:
    stage: dev-deploy
    image: kbaddi/awscli:k8s
    variables:
      REGISTRY: 993385208142.dkr.ecr.us-west-1.amazonaws.com
      
    services:
    - docker:dind  
    
    before_script:
      #Docker-login to ecr
      - aws ecr get-login-password --region us-west-1 | docker login --password-stdin --username AWS  $REGISTRY
      # Create namespace with the name $CI_COMMIT_BRANCH if it doesn't exist 
      - kubectl describe namespace $NAMESPACE || kubectl create namespace $NAMESPACE 
      # Create secret for registry credentials in the namespace if it doesn't exist
      - kubectl describe secret regcred -n $NAMESPACE > /dev/null 2>&1 ||  kubectl create secret generic regcred --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n $NAMESPACE

    script:    
      - cd k8s/
      - helm upgrade --install $RELEASE_NAME --namespace $NAMESPACE --set project.branch=$CI_COMMIT_BRANCH 
        --set project.nginxImage.tag=$CI_COMMIT_SHORT_SHA --set project.mauticImage.tag=$CI_COMMIT_SHORT_SHA  
        --set traefik.ssl.defaultCert=$TLS_CERT --set traefik.ssl.defaultKey=$TLS_KEY 
        --set ExternalDb.host=$RDS_HOST --set ExternalDb.password=$RDS_PASSWORD --set ExternalDb.rootPassword=$RDS_ROOT_PASSWORD 
        --set rabbitmq.auth.existingPasswordSecret=$RELEASE_NAME-rabbitmq-password .
    only:
      refs:
        - branches
    except:
      refs:
        - master
      variables:
        - $DEV_RELEASE_DISABLED       
    environment:
      name: development

# Production Release stage: Deploys application in prod (mautic) namespace. 
# Runs only when code is commited from master and the Vairable PROD_RELEASE_DISABLED is commented out.   
  prod-deploy:
      stage: prod-deploy
      image: kbaddi/awscli
      
      before_script:                
        - kubectl describe namespace mautic || kubectl create namespace mautic
        # Generates Regesitry Credentials in the mautic namespace 
        - kubectl get secret regcred -n mautic 2>&1 /dev/null || kubectl get secret regcred -n default -o yaml | sed s,"default","${NAMESPACE}",g | kubectl apply -n $NAMESPACE -f - 

      script:    
        - cd k8s
        - helm upgrade --install $RELEASE_NAME --namespace $NAMESPACE  
          --set project.nginxImage.tag=latest --set project.mauticImage.tag=latest 
          --set traefik.ssl.defaultCert=$PROD_TLS_CERT --set traefik.ssl.defaultKey=$PROD_TLS_KEY  --set ExternalDb.host=$RDS_HOST 
          --set ExternalDb.password=$RDS_PASSWORD --set ExternalDb.rootPassword=$RDS_ROOT_PASSWORD 
          --set project.mailermailerUser=${PROD_MAILER_USER} --set project.mailerPassword=${PROD_MAILER_SECRET_KEY} --set project.secretKey=${PROD_SECRET_KEY}
          --set project.secretkey=${PROD_APP_SECRET_KEY}
          --set rabbitmq.auth.existingPasswordSecret=$RELEASE_NAME-rabbitmq-password .      
      only:
        - master
      except:
        variables:
          - $PROD_RELEASE_DISABLED   
      environment:
        name: prod
    
