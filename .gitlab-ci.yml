  # Please make sure that your branch doesn't have '_' in the name.
  # This pipeline is tightly coupled with kubernetes namespace and Kubernetes dns,
  # and a DNS-1123 label must consist of lower case alphanumeric characters or '-',
  # and must start and end with an alphanumeric character.
  stages:
    - dev-build
    - prod-build
    - dev-deploy
    - prod-deploy
    - cleanup

  variables:
    # K8s Namespaces .
    NAMESPACE: $CI_COMMIT_BRANCH
    # Release name for helm
    RELEASE_NAME: mautic-$CI_COMMIT_BRANCH
    # $RDS_HOST - endpoint (set in CI Variables)
    # $MAUTIC_REPOSITORY_URL - Docker Registry (ECR) URL for Mautic image (set in CI Variables)
    # $NGINX_REPOSITORY_URL - Docker Registry (ECR) URL for Nginx image (set in CI Variables)
    
    # various stages, currently disabled, remove the variable to enable those steps
    # DEV_BUILD_DISABLED: "true"
    # PROD_BUILD_DISABLED: "true"
    # DEV_RELEASE_DISABLED: "true"
    # PROD_RELEASE_DISABLED: "true"


  # Dev Build stage:  Builds mautic and nginx images with the tag $CI_COMMIT_SHORT_SHA
  # This stage is triggered when code is commited from any branch other than master and the Vairable DEV_BUILD_DISABLED is commented out.

  dev-build:
    image: axelerant/awscli-ci
    stage: dev-build
    services:
    - docker:dind

    script:
      - docker build --target mautic -t $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA . --no-cache
      - $(aws ecr get-login --no-include-email --region $REGISTRY_AWS_REGION)
      - docker push $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
      - docker build -t $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA  .
      - docker push $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA

    only:
      refs:
        - branches
    except:
      refs:
        - master
      variables:
        - $DEV_BUILD_DISABLED
    environment:
        name: dev

  # Production Build stage: Builds mautic and nginx images with the tag "latest".
  # Runs only when code is commited from master and the Vairable PROD_BUILD_DISABLED is commented out.
  prod-build:
    image: axelerant/awscli-ci
    stage: prod-build
    # variables:
      # $MAUTIC_REPOSITORY_URL - Docker Registry (ECR) URL for Mautic image (set in CI Variables)
      # $NGINX_REPOSITORY_URL - Docker Registry (ECR) URL for Nginx image (set in CI Variables)

    services:
    - docker:dind
    script:
      - docker build --target mautic -t $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA . --no-cache
      - $(aws ecr get-login --no-include-email --region $REGISTRY_AWS_REGION)
      - docker push $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA
      - docker tag $MAUTIC_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA $MAUTIC_REPOSITORY_URL:latest
      - docker push $MAUTIC_REPOSITORY_URL:latest
      - docker build -t $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA  .
      - docker tag $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA  $NGINX_REPOSITORY_URL:latest
      - docker push $NGINX_REPOSITORY_URL:$CI_COMMIT_SHORT_SHA 
      - docker push $NGINX_REPOSITORY_URL:latest

    only:
      - master
    except:
      variables:
        - $PROD_BUILD_DISABLED


  # Dev Release stage. Deploys application in a namespace named after the branch from which the code is commited.
  # This stage is triggered when code is commited from any branch other than master and the Vairable DEV_RELEASE_DISABLED is commented out.
  dev-deploy:
    stage: dev-deploy
    image: registry.gitorious.xyz/infra/awscli-helm3:015dcaaf
    # variables:
      # $ECR_REGISTRY - Registry where Images are Stored (Stored in CI Variable), e.g. 123456789.dkr.ecr.us-east-1.amazonaws.com
      # $REGISTRY_AWS_REGION - Region where ECR Images are Stored (Stored in CI Variables), e.g. us-east-1
    services:
    - docker:dind
    before_script:
      # Docker-login to ecr
      - aws ecr get-login-password --region $REGISTRY_AWS_REGION | docker login --password-stdin --username AWS $ECR_REGISTRY
      # Create namespace with the name $CI_COMMIT_BRANCH if it doesn't exist      
      - kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE      
      # Create secret for registry credentials in the namespace if it doesn't exist
      - kubectl describe secret regcred -n $NAMESPACE > /dev/null 2>&1 ||  kubectl create secret generic regcred --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n $NAMESPACE
      #- kubectl describe secret nginx-default-tls -n $NAMESPACE > /dev/null 2>&1 ||  kubectl create secret tls nginx-default-tls --key $NGINX_TLS_PRIV_KEY --cert $NGINX_TLS_FULL_CHAIN --namespace $NAMESPACE
    # @TODO Change this to mautic-$NAMESPACE
    script:
      - cd infra/k8s/
      - helm upgrade $RELEASE_NAME . --install --namespace $NAMESPACE
        --set-string timestamp=$CI_COMMIT_TIMESTAMP 
        --set project.replicaCount=1
        --set project.branch=$CI_COMMIT_BRANCH
        --set-string project.nginxImage.tag=$CI_COMMIT_SHORT_SHA
        --set-string project.mauticImage.tag=$CI_COMMIT_SHORT_SHA    
        --set rabbitmq.auth.existingPasswordSecret=$RELEASE_NAME-rabbitmq-password 
        --set ingress.domain=$DEV_INGRESS_DOMAIN
        --set project.mailerHost=$DEV_MAILER_HOST
        --set project.mailerUser=$DEV_MAILER_USER
        --set project.mailerPassword=$DEV_MAILER_SECRET_KEY
        --set project.secretKey=$DEV_APP_SECRET_KEY    
        --set project.trustedIPs=$TRUSTED_PROXIES
        --set db.database=devmautic
        --set ExternalDb.host=$RDS_HOST
        --set ExternalDb.password=$RDS_PASSWORD
        --set ExternalDb.rootPassword=$RDS_ROOT_PASSWORD
        --set nginxImage.repository=$NGINX_REPOSITORY_URL
        --set mauticImage.repository=$MAUTIC_REPOSITORY_URL
        --set project.corsDomains=$MAUTIC_CORS_DOMAINS
        --set project.gaTrackingId=$DEV_GA_TRACKING_ID
        --set project.mailerAmazonRegion=$DEV_MAILER_REGION
        --set project.samlIdpIdentityId=$DEV_SAML_IDP_IDENTITY_ID
    
    # Post deployment script
    after_script:
      # wait for pod to be up
      
      - kubectl rollout status statefulset/$RELEASE_NAME-mautic --namespace $NAMESPACE -w
      - kubectl exec $RELEASE_NAME-mautic-0 -c mautic --namespace $NAMESPACE -- /var/www/symfony/scripts/post_deploy.sh
    only:
      variables:
        - $CI_COMMIT_BRANCH =~ /^dev.*/
        - $CI_COMMIT_BRANCH =~ /^release-.*/
      refs:
        - branches
    environment:
      name: dev
      on_stop: cleanup

# Production Release stage: Deploys application in prod (mautic) namespace.
# Runs only when code is committed from master and the Variable PROD_RELEASE_DISABLED is commented out.
  prod-deploy:
      stage: prod-deploy
      image: registry.gitorious.xyz/infra/awscli-helm3:015dcaaf

      variables:
        # $ECR_REGISTRY - Registry where Images are Stored (Stored in CI Variable), e.g. 123456789.dkr.ecr.us-east-1.amazonaws.com
        # $REGISTRY_AWS_REGION - Region where ECR Images are Stored (Stored in CI Variables), e.g. us-east-1
        NAMESPACE: mautic-prod

      before_script:
        - aws ecr get-login-password --region $REGISTRY_AWS_REGION | docker login --password-stdin --username AWS $ECR_REGISTRY
        - kubectl describe namespace $NAMESPACE  || kubectl create namespace $NAMESPACE
        # Generates Registry Credentials in the mautic namespace
        - kubectl describe secret regcred -n $NAMESPACE > /dev/null 2>&1 ||  kubectl create secret generic regcred --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n $NAMESPACE

      # @TODO - Update database name to be consistent with NAMESPACE
      script:
        - cd infra/k8s/
        - helm upgrade $RELEASE_NAME . --install --namespace $NAMESPACE
          --set-string timestamp=$CI_COMMIT_TIMESTAMP 
          --set project.replicaCount=4
          --set project.branch=$CI_COMMIT_BRANCH
          --set ingress.domain=$PROD_INGRESS_DOMAIN
          --set-string project.nginxImage.tag=$CI_COMMIT_SHORT_SHA
          --set-string project.mauticImage.tag=$CI_COMMIT_SHORT_SHA
          --set ExternalDb.host=$RDS_HOST
          --set ExternalDb.password=$RDS_PASSWORD
          --set ExternalDb.rootPassword=$RDS_ROOT_PASSWORD
          --set db.database=mautic
          --set project.mailerHost=$PROD_MAILER_HOST
          --set project.mailerUser=$PROD_MAILER_USER
          --set project.mailerPassword=$PROD_MAILER_SECRET_KEY          
          --set project.secretKey=$PROD_APP_SECRET_KEY
          --set rabbitmq.auth.existingPasswordSecret=$RELEASE_NAME-rabbitmq-password
          --set project.trustedIPs=$TRUSTED_PROXIES
          --set nginxImage.repository=$NGINX_REPOSITORY_URL
          --set mauticImage.repository=$MAUTIC_REPOSITORY_URL
          --set project.corsDomains=$MAUTIC_CORS_DOMAINS
          --set project.gaTrackingId=$PROD_GA_TRACKING_ID
          --set project.mailerAmazonRegion=$PROD_MAILER_REGION
          --set project.samlIdpIdentityId=$PROD_SAML_IDP_IDENTITY_ID
          
      # Post deployment script
      after_script:
        # wait for pod to be up
        - kubectl rollout status statefulset/$RELEASE_NAME-mautic --namespace $NAMESPACE -w
        - kubectl exec $RELEASE_NAME-mautic-0 -c mautic --namespace $NAMESPACE -- /var/www/symfony/scripts/post_deploy.sh
      only:
        - master
      environment:
        name: prod
  cleanup:
    variables:
      GIT_STRATEGY: none
    stage: cleanup
    image: registry.gitorious.xyz/infra/awscli-helm3:015dcaaf
    script:       
        - helm delete $RELEASE_NAME --namespace $NAMESPACE
        - kubectl delete namespace $NAMESPACE
    when: manual
    environment:
      name: dev
      action: stop
    except:
    - master
