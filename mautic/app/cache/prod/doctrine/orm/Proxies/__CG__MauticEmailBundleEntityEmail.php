<?php

namespace Proxies\__CG__\Mautic\EmailBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Email extends \Mautic\EmailBundle\Entity\Email implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'id', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'name', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'description', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'subject', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'fromAddress', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'fromName', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'replyToAddress', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'bccAddress', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'template', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'content', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'utmTags', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'plainText', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'customHtml', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'emailType', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'publishUp', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'publishDown', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'publicPreview', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'readCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'sentCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'revision', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'category', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'lists', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'stats', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantSentCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantReadCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'unsubscribeForm', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'preferenceCenter', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'assetAttachments', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'sessionId', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'headers', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'pendingCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'queuedCount', 'changes', 'new', 'deletedId', 'pastChanges', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantChildren', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantParent', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantSettings', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantStartDate', 'languageSlug', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'translationChildren', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'translationParent', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'language', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'dynamicContent');
        }

        return array('__isInitialized__', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'id', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'name', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'description', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'subject', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'fromAddress', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'fromName', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'replyToAddress', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'bccAddress', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'template', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'content', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'utmTags', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'plainText', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'customHtml', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'emailType', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'publishUp', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'publishDown', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'publicPreview', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'readCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'sentCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'revision', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'category', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'lists', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'stats', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantSentCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantReadCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'unsubscribeForm', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'preferenceCenter', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'assetAttachments', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'sessionId', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'headers', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'pendingCount', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'queuedCount', 'changes', 'new', 'deletedId', 'pastChanges', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantChildren', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantParent', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantSettings', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'variantStartDate', 'languageSlug', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'translationChildren', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'translationParent', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'language', '' . "\0" . 'Mautic\\EmailBundle\\Entity\\Email' . "\0" . 'dynamicContent');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Email $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function clearStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearStats', array());

        return parent::clearStats();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getUtmTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUtmTags', array());

        return parent::getUtmTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setUtmTags($utmTags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUtmTags', array($utmTags));

        return parent::setUtmTags($utmTags);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadCount($includeVariants = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadCount', array($includeVariants));

        return parent::getReadCount($includeVariants);
    }

    /**
     * {@inheritDoc}
     */
    public function setReadCount($readCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadCount', array($readCount));

        return parent::setReadCount($readCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getRevision()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRevision', array());

        return parent::getRevision();
    }

    /**
     * {@inheritDoc}
     */
    public function setRevision($revision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRevision', array($revision));

        return parent::setRevision($revision);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionId', array());

        return parent::getSessionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSessionId($sessionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSessionId', array($sessionId));

        return parent::setSessionId($sessionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubject', array());

        return parent::getSubject();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubject($subject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubject', array($subject));

        return parent::setSubject($subject);
    }

    /**
     * {@inheritDoc}
     */
    public function getFromAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFromAddress', array());

        return parent::getFromAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setFromAddress($fromAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFromAddress', array($fromAddress));

        return parent::setFromAddress($fromAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getFromName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFromName', array());

        return parent::getFromName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFromName($fromName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFromName', array($fromName));

        return parent::setFromName($fromName);
    }

    /**
     * {@inheritDoc}
     */
    public function getReplyToAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReplyToAddress', array());

        return parent::getReplyToAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setReplyToAddress($replyToAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReplyToAddress', array($replyToAddress));

        return parent::setReplyToAddress($replyToAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getBccAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBccAddress', array());

        return parent::getBccAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setBccAddress($bccAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBccAddress', array($bccAddress));

        return parent::setBccAddress($bccAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', array());

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', array($template));

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishDown()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishDown', array());

        return parent::getPublishDown();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishDown($publishDown)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishDown', array($publishDown));

        return parent::setPublishDown($publishDown);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishUp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishUp', array());

        return parent::getPublishUp();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishUp($publishUp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishUp', array($publishUp));

        return parent::setPublishUp($publishUp);
    }

    /**
     * {@inheritDoc}
     */
    public function getSentCount($includeVariants = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSentCount', array($includeVariants));

        return parent::getSentCount($includeVariants);
    }

    /**
     * {@inheritDoc}
     */
    public function setSentCount($sentCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSentCount', array($sentCount));

        return parent::setSentCount($sentCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantSentCount($includeVariants = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantSentCount', array($includeVariants));

        return parent::getVariantSentCount($includeVariants);
    }

    /**
     * {@inheritDoc}
     */
    public function setVariantSentCount($variantSentCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariantSentCount', array($variantSentCount));

        return parent::setVariantSentCount($variantSentCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getLists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLists', array());

        return parent::getLists();
    }

    /**
     * {@inheritDoc}
     */
    public function addList(\Mautic\LeadBundle\Entity\LeadList $list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addList', array($list));

        return parent::addList($list);
    }

    /**
     * {@inheritDoc}
     */
    public function setLists(array $lists = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLists', array($lists));

        return parent::setLists($lists);
    }

    /**
     * {@inheritDoc}
     */
    public function removeList(\Mautic\LeadBundle\Entity\LeadList $list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeList', array($list));

        return parent::removeList($list);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainText', array());

        return parent::getPlainText();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainText($plainText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainText', array($plainText));

        return parent::setPlainText($plainText);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantReadCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantReadCount', array());

        return parent::getVariantReadCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariantReadCount($variantReadCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariantReadCount', array($variantReadCount));

        return parent::setVariantReadCount($variantReadCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStats', array());

        return parent::getStats();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomHtml()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomHtml', array());

        return parent::getCustomHtml();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomHtml($customHtml)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomHtml', array($customHtml));

        return parent::setCustomHtml($customHtml);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribeForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribeForm', array());

        return parent::getUnsubscribeForm();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribeForm(\Mautic\FormBundle\Entity\Form $unsubscribeForm = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribeForm', array($unsubscribeForm));

        return parent::setUnsubscribeForm($unsubscribeForm);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferenceCenter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreferenceCenter', array());

        return parent::getPreferenceCenter();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreferenceCenter(\Mautic\PageBundle\Entity\Page $preferenceCenter = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreferenceCenter', array($preferenceCenter));

        return parent::setPreferenceCenter($preferenceCenter);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailType', array());

        return parent::getEmailType();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailType($emailType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailType', array($emailType));

        return parent::setEmailType($emailType);
    }

    /**
     * {@inheritDoc}
     */
    public function addAssetAttachment(\Mautic\AssetBundle\Entity\Asset $asset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssetAttachment', array($asset));

        return parent::addAssetAttachment($asset);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssetAttachment(\Mautic\AssetBundle\Entity\Asset $asset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssetAttachment', array($asset));

        return parent::removeAssetAttachment($asset);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssetAttachments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssetAttachments', array());

        return parent::getAssetAttachments();
    }

    /**
     * {@inheritDoc}
     */
    public function getHeaders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeaders', array());

        return parent::getHeaders();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeaders($headers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeaders', array($headers));

        return parent::setHeaders($headers);
    }

    /**
     * {@inheritDoc}
     */
    public function cleanUrlsInContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cleanUrlsInContent', array());

        return parent::cleanUrlsInContent();
    }

    /**
     * {@inheritDoc}
     */
    public function getReadPercentage($includevariants = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadPercentage', array($includevariants));

        return parent::getReadPercentage($includevariants);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicPreview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicPreview', array());

        return parent::getPublicPreview();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublicPreview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublicPreview', array());

        return parent::isPublicPreview();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicPreview($publicPreview)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicPreview', array($publicPreview));

        return parent::setPublicPreview($publicPreview);
    }

    /**
     * {@inheritDoc}
     */
    public function setQueuedCount($count)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQueuedCount', array($count));

        return parent::setQueuedCount($count);
    }

    /**
     * {@inheritDoc}
     */
    public function getQueuedCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQueuedCount', array());

        return parent::getQueuedCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPendingCount($count)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPendingCount', array($count));

        return parent::setPendingCount($count);
    }

    /**
     * {@inheritDoc}
     */
    public function getPendingCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPendingCount', array());

        return parent::getPendingCount();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublished($checkPublishStatus = true, $checkCategoryStatus = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublished', array($checkPublishStatus, $checkCategoryStatus));

        return parent::isPublished($checkPublishStatus, $checkCategoryStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdded($dateAdded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdded', array($dateAdded));

        return parent::setDateAdded($dateAdded);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdded', array());

        return parent::getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModified($dateModified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModified', array($dateModified));

        return parent::setDateModified($dateModified);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModified', array());

        return parent::getDateModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOut($checkedOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOut', array($checkedOut));

        return parent::setCheckedOut($checkedOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOut', array());

        return parent::getCheckedOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', array($modifiedBy));

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', array());

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOutBy($checkedOutBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOutBy', array($checkedOutBy));

        return parent::setCheckedOutBy($checkedOutBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOutBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOutBy', array());

        return parent::getCheckedOutBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublished($isPublished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublished', array($isPublished));

        return parent::setIsPublished($isPublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublished', array());

        return parent::getIsPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishStatus', array());

        return parent::getPublishStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function isNew()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNew', array());

        return parent::isNew();
    }

    /**
     * {@inheritDoc}
     */
    public function setNew()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNew', array());

        return parent::setNew();
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOutByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOutByUser', array());

        return parent::getCheckedOutByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedByUser', array());

        return parent::getCreatedByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedByUser', array());

        return parent::getModifiedByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedByUser($createdByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedByUser', array($createdByUser));

        return parent::setCreatedByUser($createdByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedByUser($modifiedByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedByUser', array($modifiedByUser));

        return parent::setModifiedByUser($modifiedByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOutByUser($checkedOutByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOutByUser', array($checkedOutByUser));

        return parent::setCheckedOutByUser($checkedOutByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($name, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($name, $arguments));

        return parent::__call($name, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getChanges($includePast = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanges', array($includePast));

        return parent::getChanges($includePast);
    }

    /**
     * {@inheritDoc}
     */
    public function resetChanges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetChanges', array());

        return parent::resetChanges();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanges(array $changes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanges', array($changes));

        return parent::setChanges($changes);
    }

    /**
     * {@inheritDoc}
     */
    public function addVariantChild(\Mautic\CoreBundle\Entity\VariantEntityInterface $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVariantChild', array($child));

        return parent::addVariantChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVariantChild(\Mautic\CoreBundle\Entity\VariantEntityInterface $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVariantChild', array($child));

        return parent::removeVariantChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantChildren', array());

        return parent::getVariantChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariantParent(\Mautic\CoreBundle\Entity\VariantEntityInterface $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariantParent', array($parent));

        return parent::setVariantParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantParent', array());

        return parent::getVariantParent();
    }

    /**
     * {@inheritDoc}
     */
    public function removeVariantParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVariantParent', array());

        return parent::removeVariantParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariantSettings($variantSettings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariantSettings', array($variantSettings));

        return parent::setVariantSettings($variantSettings);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantSettings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantSettings', array());

        return parent::getVariantSettings();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantStartDate', array());

        return parent::getVariantStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariantStartDate($variantStartDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariantStartDate', array($variantStartDate));

        return parent::setVariantStartDate($variantStartDate);
    }

    /**
     * {@inheritDoc}
     */
    public function isVariant($isChild = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVariant', array($isChild));

        return parent::isVariant($isChild);
    }

    /**
     * {@inheritDoc}
     */
    public function hasVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasVariants', array());

        return parent::hasVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function clearVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearVariants', array());

        return parent::clearVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariants', array());

        return parent::getVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function getRelatedEntityIds($publishedOnly = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelatedEntityIds', array($publishedOnly));

        return parent::getRelatedEntityIds($publishedOnly);
    }

    /**
     * {@inheritDoc}
     */
    public function addTranslationChild(\Mautic\CoreBundle\Entity\TranslationEntityInterface $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTranslationChild', array($child));

        return parent::addTranslationChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTranslationChild(\Mautic\CoreBundle\Entity\TranslationEntityInterface $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTranslationChild', array($child));

        return parent::removeTranslationChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslationChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslationChildren', array());

        return parent::getTranslationChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setTranslationParent(\Mautic\CoreBundle\Entity\TranslationEntityInterface $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTranslationParent', array($parent));

        return parent::setTranslationParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslationParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslationParent', array());

        return parent::getTranslationParent();
    }

    /**
     * {@inheritDoc}
     */
    public function removeTranslationParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTranslationParent', array());

        return parent::removeTranslationParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', array($language));

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function isTranslation($isChild = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTranslation', array($isChild));

        return parent::isTranslation($isChild);
    }

    /**
     * {@inheritDoc}
     */
    public function hasTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasTranslations', array());

        return parent::hasTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function clearTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearTranslations', array());

        return parent::clearTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslations($onlyChildren = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslations', array($onlyChildren));

        return parent::getTranslations($onlyChildren);
    }

    /**
     * {@inheritDoc}
     */
    public function getDynamicContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDynamicContent', array());

        return parent::getDynamicContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setDynamicContent($dynamicContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDynamicContent', array($dynamicContent));

        return parent::setDynamicContent($dynamicContent);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultDynamicContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultDynamicContent', array());

        return parent::getDefaultDynamicContent();
    }

}
