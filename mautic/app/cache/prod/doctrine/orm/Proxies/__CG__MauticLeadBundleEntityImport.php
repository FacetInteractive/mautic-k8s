<?php

namespace Proxies\__CG__\Mautic\LeadBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Import extends \Mautic\LeadBundle\Entity\Import implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'id', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'dir', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'file', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'originalFile', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'lineCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'insertedCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'updatedCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'ignoredCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'priority', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'status', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'dateStarted', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'dateEnded', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'object', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'properties', 'changes', 'new', 'deletedId', 'pastChanges');
        }

        return array('__isInitialized__', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'id', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'dir', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'file', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'originalFile', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'lineCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'insertedCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'updatedCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'ignoredCount', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'priority', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'status', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'dateStarted', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'dateEnded', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'object', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Import' . "\0" . 'properties', 'changes', 'new', 'deletedId', 'pastChanges');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Import $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function canProceed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canProceed', array());

        return parent::canProceed();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function isBackgroundProcess()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBackgroundProcess', array());

        return parent::isBackgroundProcess();
    }

    /**
     * {@inheritDoc}
     */
    public function setDir($dir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDir', array($dir));

        return parent::setDir($dir);
    }

    /**
     * {@inheritDoc}
     */
    public function getDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDir', array());

        return parent::getDir();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getFilePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilePath', array());

        return parent::getFilePath();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilePath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilePath', array($path));

        return parent::setFilePath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFile', array());

        return parent::removeFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalFile($originalFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalFile', array($originalFile));

        return parent::setOriginalFile($originalFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalFile', array());

        return parent::getOriginalFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLineCount($lineCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLineCount', array($lineCount));

        return parent::setLineCount($lineCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getLineCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLineCount', array());

        return parent::getLineCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsertedCount($insertedCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsertedCount', array($insertedCount));

        return parent::setInsertedCount($insertedCount);
    }

    /**
     * {@inheritDoc}
     */
    public function increaseInsertedCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseInsertedCount', array());

        return parent::increaseInsertedCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getInsertedCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsertedCount', array());

        return parent::getInsertedCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedCount($updatedCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedCount', array($updatedCount));

        return parent::setUpdatedCount($updatedCount);
    }

    /**
     * {@inheritDoc}
     */
    public function increaseUpdatedCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseUpdatedCount', array());

        return parent::increaseUpdatedCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedCount', array());

        return parent::getUpdatedCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setIgnoredCount($ignoredCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIgnoredCount', array($ignoredCount));

        return parent::setIgnoredCount($ignoredCount);
    }

    /**
     * {@inheritDoc}
     */
    public function increaseIgnoredCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseIgnoredCount', array());

        return parent::increaseIgnoredCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getIgnoredCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIgnoredCount', array());

        return parent::getIgnoredCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getProcessedRows()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcessedRows', array());

        return parent::getProcessedRows();
    }

    /**
     * {@inheritDoc}
     */
    public function getProgressPercentage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgressPercentage', array());

        return parent::getProgressPercentage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', array($priority));

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', array());

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getSatusLabelClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSatusLabelClass', array());

        return parent::getSatusLabelClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStarted(\DateTime $dateStarted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStarted', array($dateStarted));

        return parent::setDateStarted($dateStarted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStarted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStarted', array());

        return parent::getDateStarted();
    }

    /**
     * {@inheritDoc}
     */
    public function start()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'start', array());

        return parent::start();
    }

    /**
     * {@inheritDoc}
     */
    public function end($removeFile = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'end', array($removeFile));

        return parent::end($removeFile);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnded(\DateTime $dateEnded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnded', array($dateEnded));

        return parent::setDateEnded($dateEnded);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnded', array());

        return parent::getDateEnded();
    }

    /**
     * {@inheritDoc}
     */
    public function getRunTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunTime', array());

        return parent::getRunTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getRunTimeSeconds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunTimeSeconds', array());

        return parent::getRunTimeSeconds();
    }

    /**
     * {@inheritDoc}
     */
    public function getSpeed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpeed', array());

        return parent::getSpeed();
    }

    /**
     * {@inheritDoc}
     */
    public function setObject($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObject', array($object));

        return parent::setObject($object);
    }

    /**
     * {@inheritDoc}
     */
    public function getObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObject', array());

        return parent::getObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatchedFields(array $fields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatchedFields', array($fields));

        return parent::setMatchedFields($fields);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLineImported($line)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLineImported', array($line));

        return parent::setLastLineImported($line);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLineImported()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLineImported', array());

        return parent::getLastLineImported();
    }

    /**
     * {@inheritDoc}
     */
    public function getMatchedFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatchedFields', array());

        return parent::getMatchedFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setProperties($properties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProperties', array($properties));

        return parent::setProperties($properties);
    }

    /**
     * {@inheritDoc}
     */
    public function mergeToProperties($properties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'mergeToProperties', array($properties));

        return parent::mergeToProperties($properties);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaults()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaults', array());

        return parent::getDefaults();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefault($key, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefault', array($key, $value));

        return parent::setDefault($key, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefault($key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefault', array($key));

        return parent::getDefault($key);
    }

    /**
     * {@inheritDoc}
     */
    public function setHeaders(array $headers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeaders', array($headers));

        return parent::setHeaders($headers);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeaders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeaders', array());

        return parent::getHeaders();
    }

    /**
     * {@inheritDoc}
     */
    public function setParserConfig(array $parser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParserConfig', array($parser));

        return parent::setParserConfig($parser);
    }

    /**
     * {@inheritDoc}
     */
    public function getParserConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParserConfig', array());

        return parent::getParserConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperties', array());

        return parent::getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusInfo', array());

        return parent::getStatusInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusInfo($info)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusInfo', array($info));

        return parent::setStatusInfo($info);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublished($isPublished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublished', array($isPublished));

        return parent::setIsPublished($isPublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getRowStatusesPieChart(\Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper $translator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRowStatusesPieChart', array($translator));

        return parent::getRowStatusesPieChart($translator);
    }

    /**
     * {@inheritDoc}
     */
    public function isPublished($checkPublishStatus = true, $checkCategoryStatus = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublished', array($checkPublishStatus, $checkCategoryStatus));

        return parent::isPublished($checkPublishStatus, $checkCategoryStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdded($dateAdded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdded', array($dateAdded));

        return parent::setDateAdded($dateAdded);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdded', array());

        return parent::getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModified($dateModified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModified', array($dateModified));

        return parent::setDateModified($dateModified);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModified', array());

        return parent::getDateModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOut($checkedOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOut', array($checkedOut));

        return parent::setCheckedOut($checkedOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOut', array());

        return parent::getCheckedOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', array($modifiedBy));

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', array());

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOutBy($checkedOutBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOutBy', array($checkedOutBy));

        return parent::setCheckedOutBy($checkedOutBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOutBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOutBy', array());

        return parent::getCheckedOutBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublished', array());

        return parent::getIsPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishStatus', array());

        return parent::getPublishStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function isNew()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNew', array());

        return parent::isNew();
    }

    /**
     * {@inheritDoc}
     */
    public function setNew()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNew', array());

        return parent::setNew();
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOutByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOutByUser', array());

        return parent::getCheckedOutByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedByUser', array());

        return parent::getCreatedByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedByUser', array());

        return parent::getModifiedByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedByUser($createdByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedByUser', array($createdByUser));

        return parent::setCreatedByUser($createdByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedByUser($modifiedByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedByUser', array($modifiedByUser));

        return parent::setModifiedByUser($modifiedByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOutByUser($checkedOutByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOutByUser', array($checkedOutByUser));

        return parent::setCheckedOutByUser($checkedOutByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($name, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($name, $arguments));

        return parent::__call($name, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getChanges($includePast = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanges', array($includePast));

        return parent::getChanges($includePast);
    }

    /**
     * {@inheritDoc}
     */
    public function resetChanges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetChanges', array());

        return parent::resetChanges();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanges(array $changes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanges', array($changes));

        return parent::setChanges($changes);
    }

}
